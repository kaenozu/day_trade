# Kong API Gateway Configuration
# Day Trade ML System - Microservices API Gateway

_format_version: "2.1"
_transform: true

# Services Definition
services:
  # ML Prediction Service
  - name: ml-service
    url: http://ml-service:8000
    tags: ["ml", "prediction", "core"]
    connect_timeout: 30000
    write_timeout: 30000
    read_timeout: 30000
    retries: 3

  # Data Management Service
  - name: data-service
    url: http://data-service:8001
    tags: ["data", "fetcher", "core"]
    connect_timeout: 10000
    write_timeout: 10000
    read_timeout: 10000
    retries: 5

  # Symbol Selection Service
  - name: symbol-service
    url: http://symbol-service:8002
    tags: ["symbol", "selection", "core"]
    connect_timeout: 15000
    write_timeout: 15000
    read_timeout: 15000
    retries: 3

  # Execution Management Service
  - name: execution-service
    url: http://execution-service:8003
    tags: ["execution", "scheduler", "core"]
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    retries: 2

  # Notification Service
  - name: notification-service
    url: http://notification-service:8004
    tags: ["notification", "alert", "support"]
    connect_timeout: 5000
    write_timeout: 5000
    read_timeout: 5000
    retries: 3

# Routes Definition
routes:
  # ML Service Routes
  - name: ml-predict
    service: ml-service
    paths: ["/api/v1/ml/predict"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["ml", "prediction"]

  - name: ml-batch-predict
    service: ml-service
    paths: ["/api/v1/ml/batch-predict"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["ml", "batch"]

  - name: ml-models
    service: ml-service
    paths: ["/api/v1/ml/models"]
    methods: ["GET"]
    strip_path: false
    preserve_host: false
    tags: ["ml", "models"]

  - name: ml-health
    service: ml-service
    paths: ["/api/v1/ml/health"]
    methods: ["GET"]
    strip_path: false
    preserve_host: false
    tags: ["ml", "health"]

  # Data Service Routes
  - name: data-stocks
    service: data-service
    paths: ["/api/v1/data/stocks"]
    methods: ["GET", "POST"]
    strip_path: false
    preserve_host: false
    tags: ["data", "stocks"]

  - name: data-batch-fetch
    service: data-service
    paths: ["/api/v1/data/batch-fetch"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["data", "batch"]

  - name: data-cache
    service: data-service
    paths: ["/api/v1/data/cache"]
    methods: ["GET", "DELETE"]
    strip_path: false
    preserve_host: false
    tags: ["data", "cache"]

  # Symbol Service Routes
  - name: symbol-select
    service: symbol-service
    paths: ["/api/v1/symbols/select"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["symbol", "select"]

  - name: symbol-screen
    service: symbol-service
    paths: ["/api/v1/symbols/screen"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["symbol", "screen"]

  - name: symbol-ranking
    service: symbol-service
    paths: ["/api/v1/symbols/ranking"]
    methods: ["GET"]
    strip_path: false
    preserve_host: false
    tags: ["symbol", "ranking"]

  # Execution Service Routes
  - name: execution-schedule
    service: execution-service
    paths: ["/api/v1/execution/schedule"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["execution", "schedule"]

  - name: execution-jobs
    service: execution-service
    paths: ["/api/v1/execution/jobs"]
    methods: ["GET", "POST", "PUT", "DELETE"]
    strip_path: false
    preserve_host: false
    tags: ["execution", "jobs"]

  - name: execution-workflow
    service: execution-service
    paths: ["/api/v1/execution/workflow"]
    methods: ["GET", "POST", "PUT"]
    strip_path: false
    preserve_host: false
    tags: ["execution", "workflow"]

  # Notification Service Routes
  - name: notification-send
    service: notification-service
    paths: ["/api/v1/notifications/send"]
    methods: ["POST"]
    strip_path: false
    preserve_host: false
    tags: ["notification", "send"]

  - name: notification-status
    service: notification-service
    paths: ["/api/v1/notifications/status"]
    methods: ["GET"]
    strip_path: false
    preserve_host: false
    tags: ["notification", "status"]

# Plugins Configuration
plugins:
  # Global Rate Limiting
  - name: rate-limiting
    config:
      minute: 1000
      hour: 10000
      day: 100000
      policy: redis
      redis_host: redis
      redis_port: 6379
      redis_database: 1
      fault_tolerant: true
      hide_client_headers: false
    tags: ["global", "rate-limiting"]

  # Global Request/Response Logging
  - name: file-log
    config:
      path: /var/log/kong/access.log
      reopen: true
    tags: ["global", "logging"]

  # Global Prometheus Metrics
  - name: prometheus
    config:
      per_consumer: true
      status_code_metrics: true
      latency_metrics: true
      bandwidth_metrics: true
      upstream_health_metrics: true
    tags: ["global", "metrics"]

  # Global Request ID
  - name: request-id
    config:
      header_name: "X-Request-ID"
      generator: "uuid"
      echo_downstream: true
    tags: ["global", "tracing"]

  # Global CORS
  - name: cors
    config:
      origins: ["*"]
      methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
      headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "X-Request-ID", "Authorization"]
      exposed_headers: ["X-Auth-Token", "X-Request-ID"]
      credentials: true
      max_age: 3600
      preflight_continue: false
    tags: ["global", "cors"]

  # Route-specific Plugins
  # ML Service High Priority Rate Limiting
  - name: rate-limiting
    route: ml-predict
    config:
      minute: 500
      hour: 5000
      day: 50000
      policy: redis
      redis_host: redis
      redis_port: 6379
      redis_database: 2
      fault_tolerant: true
    tags: ["ml", "rate-limiting"]

  # ML Service Request Size Limiting
  - name: request-size-limiting
    route: ml-predict
    config:
      allowed_payload_size: 10485760  # 10MB
    tags: ["ml", "size-limiting"]

  # ML Service Response Transformation
  - name: response-transformer
    route: ml-predict
    config:
      add:
        headers:
          - "X-Service-Name:ml-service"
          - "X-Prediction-Version:v1.0"
        json:
          - "service_info.gateway: kong"
          - "service_info.timestamp: {{.timestamp}}"
    tags: ["ml", "transformation"]

  # Data Service Request Validation
  - name: request-validator
    route: data-stocks
    config:
      version: "draft4"
      body_schema: |
        {
          "type": "object",
          "properties": {
            "symbol": {"type": "string", "pattern": "^[A-Z0-9]{1,10}$"},
            "period": {"type": "string", "enum": ["1d", "5d", "1mo", "3mo", "6mo", "1y", "2y", "5y", "10y", "ytd", "max"]},
            "interval": {"type": "string", "enum": ["1m", "2m", "5m", "15m", "30m", "60m", "90m", "1h", "1d", "5d", "1wk", "1mo", "3mo"]}
          },
          "required": ["symbol"]
        }
    tags: ["data", "validation"]

  # Symbol Service Circuit Breaker
  - name: circuit-breaker
    route: symbol-select
    config:
      failure_threshold: 5
      recovery_timeout: 30
      timeout: 10
      success_threshold: 3
    tags: ["symbol", "circuit-breaker"]

  # Execution Service IP Restriction (Internal Only)
  - name: ip-restriction
    route: execution-schedule
    config:
      allow: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "127.0.0.1"]
      deny: []
    tags: ["execution", "security"]

  # Notification Service Retry
  - name: proxy-cache
    route: notification-status
    config:
      response_code: [200, 301, 404]
      request_method: ["GET", "HEAD"]
      content_type: ["text/plain", "application/json"]
      cache_ttl: 300
      strategy: memory
    tags: ["notification", "cache"]

# Consumers (API Keys)
consumers:
  - username: ml-client
    custom_id: ml-service-client
    tags: ["ml", "client"]

  - username: data-client
    custom_id: data-service-client
    tags: ["data", "client"]

  - username: admin-client
    custom_id: admin-user
    tags: ["admin", "client"]

  - username: monitoring-client
    custom_id: monitoring-system
    tags: ["monitoring", "client"]

# API Keys
keyauth_credentials:
  - consumer: ml-client
    key: ml-api-key-2025-v1
    tags: ["ml", "auth"]

  - consumer: data-client
    key: data-api-key-2025-v1
    tags: ["data", "auth"]

  - consumer: admin-client
    key: admin-api-key-2025-v1
    tags: ["admin", "auth"]

  - consumer: monitoring-client
    key: monitoring-api-key-2025-v1
    tags: ["monitoring", "auth"]

# JWT Credentials
jwt_secrets:
  - consumer: admin-client
    algorithm: "HS256"
    key: "day-trade-admin-jwt-key"
    secret: "supersecret-jwt-signing-key-for-admin"
    tags: ["admin", "jwt"]

# ACL Groups
acls:
  - consumer: ml-client
    group: ml-group
    tags: ["ml", "acl"]

  - consumer: data-client
    group: data-group
    tags: ["data", "acl"]

  - consumer: admin-client
    group: admin-group
    tags: ["admin", "acl"]

  - consumer: monitoring-client
    group: monitoring-group
    tags: ["monitoring", "acl"]

# SSL Certificates (Placeholder - replace with actual certificates)
certificates:
  - cert: |
      -----BEGIN CERTIFICATE-----
      # SSL Certificate content here
      -----END CERTIFICATE-----
    key: |
      -----BEGIN PRIVATE KEY-----
      # Private Key content here
      -----END PRIVATE KEY-----
    tags: ["ssl", "production"]

# Upstreams (Load Balancing)
upstreams:
  - name: ml-service-upstream
    algorithm: round-robin
    hash_on: none
    hash_fallback: none
    healthchecks:
      active:
        type: http
        http_path: "/health"
        healthy:
          interval: 10
          http_statuses: [200, 302]
          successes: 2
        unhealthy:
          interval: 10
          http_statuses: [429, 404, 500, 501, 502, 503, 504, 505]
          timeouts: 3
          http_failures: 5
      passive:
        healthy:
          http_statuses: [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308]
          successes: 5
        unhealthy:
          http_statuses: [429, 500, 503]
          timeouts: 7
          http_failures: 5
    tags: ["ml", "upstream"]

  - name: data-service-upstream
    algorithm: consistent-hashing
    hash_on: header
    hash_on_header: "X-Request-ID"
    healthchecks:
      active:
        type: http
        http_path: "/health"
        healthy:
          interval: 5
          http_statuses: [200]
          successes: 2
        unhealthy:
          interval: 5
          http_statuses: [429, 404, 500, 501, 502, 503, 504, 505]
          timeouts: 2
          http_failures: 3
    tags: ["data", "upstream"]

# Targets (Backend Services)
targets:
  - target: ml-service:8000
    upstream: ml-service-upstream
    weight: 100
    tags: ["ml", "primary"]

  - target: data-service:8001
    upstream: data-service-upstream
    weight: 100
    tags: ["data", "primary"]