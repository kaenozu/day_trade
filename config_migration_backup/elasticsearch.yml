#==============================================================================
# Elasticsearch 設定 - Issue #442 Phase 2
# 高性能ログストレージ・検索エンジン設定
#==============================================================================

# === クラスター設定 ===
cluster.name: day-trade-observability
node.name: elasticsearch-apm-node
node.roles: [master, data, ingest, ml]

# === ネットワーク設定 ===
network.host: 0.0.0.0
http.port: 9200
transport.port: 9300

# === ディスカバリー設定 ===
discovery.type: single-node
cluster.initial_master_nodes: ["elasticsearch-apm-node"]

# === メモリ設定 ===
bootstrap.memory_lock: true
indices.memory.index_buffer_size: 20%
indices.memory.min_index_buffer_size: 96mb

# === ディスク設定 ===
cluster.routing.allocation.disk.threshold_enabled: true
cluster.routing.allocation.disk.watermark.low: 85%
cluster.routing.allocation.disk.watermark.high: 90%
cluster.routing.allocation.disk.watermark.flood_stage: 95%

# === インデックス設定 ===
action.auto_create_index: true
action.destructive_requires_name: false

# === HFT対応の高速設定 ===

# 検索性能最適化
index.search.idle.after: 30s
index.refresh_interval: 5s  # HFT用の高頻度更新
index.translog.flush_threshold_size: 1gb
index.translog.sync_interval: 30s

# 書き込み性能最適化
index.number_of_shards: 3
index.number_of_replicas: 1
index.write.wait_for_active_shards: 1

# === セキュリティ設定 ===
xpack.security.enabled: false  # 開発環境用（本番では有効化）
xpack.security.enrollment.enabled: false
xpack.security.http.ssl.enabled: false
xpack.security.transport.ssl.enabled: false

# === モニタリング設定 ===
xpack.monitoring.collection.enabled: true
xpack.monitoring.collection.interval: 30s

# === Machine Learning 設定 ===
xpack.ml.enabled: true
xpack.ml.max_open_jobs: 10
xpack.ml.max_machine_memory_percent: 30

# === 異常検知設定 ===
xpack.ml.anomaly_detection.enabled: true

# === アラート設定 ===
xpack.watcher.enabled: false  # 本番では有効化

# === ライフサイクル管理 ===
xpack.ilm.enabled: true

# === パフォーマンス調整 ===

# 同時検索リクエスト数
search.max_concurrent_shard_requests: 10

# 検索キュー設定
thread_pool.search.queue_size: 10000
thread_pool.write.queue_size: 10000
thread_pool.analyze.queue_size: 16

# キャッシュ設定
indices.queries.cache.size: 20%
indices.fielddata.cache.size: 40%

# === ログ設定 ===
logger.level: WARN
logger.deprecation.level: WARN

# 特定カテゴリのログレベル調整
logger.org.elasticsearch.indices.recovery: DEBUG
logger.org.elasticsearch.cluster.service: DEBUG

# === JVM ヒープダンプ設定 ===
path.data: /usr/share/elasticsearch/data
path.logs: /usr/share/elasticsearch/logs
path.repo: ["/usr/share/elasticsearch/backups"]

# === HFT特化設定 ===

# 低レイテンシ検索用設定
index.search.slowlog.threshold.query.warn: 10s
index.search.slowlog.threshold.query.info: 5s
index.search.slowlog.threshold.query.debug: 2s
index.search.slowlog.threshold.query.trace: 500ms

# 高頻度書き込み最適化
index.indexing.slowlog.threshold.index.warn: 10s
index.indexing.slowlog.threshold.index.info: 5s
index.indexing.slowlog.threshold.index.debug: 2s
index.indexing.slowlog.threshold.index.trace: 200ms

# === クラスター状態最適化 ===
cluster.max_shards_per_node: 3000
cluster.routing.allocation.enable: all
cluster.routing.rebalance.enable: all

# === 圧縮設定 ===
index.codec: best_compression

# === 分析設定 ===
index.analysis.analyzer.default.type: standard
index.analysis.analyzer.default.stopwords: _english_

# === フィールドマッピング最適化 ===
index.mapping.total_fields.limit: 2000
index.mapping.depth.limit: 20
index.mapping.nested_fields.limit: 100

#==============================================================================
# Elasticsearch 特化機能:
#
# 🚀 HFT対応高速設定:
#   - 5秒間隔での高頻度リフレッシュ
#   - 最適化されたシャード・レプリカ構成
#   - 低レイテンシ検索チューニング
#
# 💾 大容量データ処理:
#   - 効率的な圧縮アルゴリズム
#   - インデックスライフサイクル管理
#   - 自動シャード管理
#
# 🔍 高速検索機能:
#   - クエリキャッシュ最適化
#   - フィールドデータキャッシュ
#   - 並列検索処理
#
# 🤖 機械学習統合:
#   - 異常検知機能
#   - パターン分析
#   - 予測的メンテナンス
#
# 📊 運用監視:
#   - パフォーマンスメトリクス
#   - スローログ分析
#   - クラスター健全性監視
#==============================================================================