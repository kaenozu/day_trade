# Kong API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace: trading-production
  labels:
    app: kong-gateway
    version: v3.4
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kong-gateway
  template:
    metadata:
      labels:
        app: kong-gateway
        version: v3.4
    spec:
      containers:
      - name: kong
        image: kong:3.4
        ports:
        - containerPort: 8000
          name: proxy
        - containerPort: 8443
          name: proxy-ssl
        - containerPort: 8001
          name: admin
        - containerPort: 8444
          name: admin-ssl
        env:
        - name: KONG_DATABASE
          value: postgres
        - name: KONG_PG_HOST
          valueFrom:
            secretKeyRef:
              name: kong-secrets
              key: postgres-host
        - name: KONG_PG_USER
          valueFrom:
            secretKeyRef:
              name: kong-secrets
              key: postgres-user
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kong-secrets
              key: postgres-password
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001"
        - name: KONG_ADMIN_GUI_URL
          value: "http://localhost:8002"
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-proxy
  namespace: trading-production
  labels:
    app: kong-gateway
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8443
    protocol: TCP
    name: https
  selector:
    app: kong-gateway

---
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-admin
  namespace: trading-production
  labels:
    app: kong-gateway
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: admin
  selector:
    app: kong-gateway

---
# Kong Gateway Routes Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-routes-config
  namespace: trading-production
data:
  kong.yaml: |
    _format_version: "3.0"

    services:
    - name: market-data-service
      url: http://market-data-service.trading-production.svc.cluster.local:80
      plugins:
      - name: rate-limiting
        config:
          minute: 1000
          hour: 10000
      - name: prometheus
        config:
          per_consumer: true
      routes:
      - name: market-data-route
        paths:
        - /api/v1/market
        methods:
        - GET
        - POST

    - name: trading-engine-service
      url: http://trading-engine-service.trading-production.svc.cluster.local:80
      plugins:
      - name: rate-limiting
        config:
          minute: 500
          hour: 5000
      - name: request-size-limiting
        config:
          allowed_payload_size: 1
      routes:
      - name: trading-route
        paths:
        - /api/v1/trading
        methods:
        - GET
        - POST
        - PUT
        - DELETE

    - name: hft-service
      url: http://hft-service.trading-production.svc.cluster.local:80
      plugins:
      - name: rate-limiting
        config:
          minute: 10000
          hour: 100000
      routes:
      - name: hft-route
        paths:
        - /api/v1/hft
        methods:
        - GET
        - POST

    - name: analysis-service
      url: http://analysis-service.trading-production.svc.cluster.local:80
      plugins:
      - name: rate-limiting
        config:
          minute: 200
          hour: 2000
      routes:
      - name: analysis-route
        paths:
        - /api/v1/analysis
        methods:
        - GET
        - POST

    plugins:
    - name: cors
      config:
        origins:
        - http://localhost:3000
        - https://trading-dashboard.example.com
        methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        headers:
        - Accept
        - Accept-Version
        - Content-Length
        - Content-MD5
        - Content-Type
        - Date
        - X-Auth-Token
        - Authorization
        exposed_headers:
        - X-Auth-Token
        - X-Rate-Limit-Remaining
        credentials: true
        max_age: 3600

    - name: jwt
      config:
        secret_is_base64: false
        claims_to_verify:
        - exp
        - iat
