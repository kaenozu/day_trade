#==============================================================================
# Prometheus 設定 - Issue #442 Phase 3
# メトリクス収集・保存・アラート統合設定
#==============================================================================

# グローバル設定
global:
  scrape_interval: 15s        # デフォルトスクレイピング間隔
  evaluation_interval: 15s    # ルール評価間隔
  external_labels:
    cluster: 'day-trade-prod'
    environment: 'production'

# アラートマネージャー設定
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# ルール設定
rule_files:
  - "alert.rules"
  - "/etc/prometheus/rules/*.yml"

# スクレイピング設定
scrape_configs:
  # === Day Trade アプリケーション ===
  - job_name: 'day-trade-app'
    static_configs:
      - targets: ['app:8000', 'app:8080']
    scrape_interval: 5s       # HFT用高頻度収集
    scrape_timeout: 3s
    metrics_path: /metrics
    honor_labels: true
    params:
      'format': ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '([^:]+):(.*)'
        target_label: '__address__'
        replacement: '${1}:${2}'
      - target_label: service
        replacement: 'day-trade-app'

  # === OpenTelemetry Collector ===
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8888', 'otel-collector:8889']
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: 'otel-collector'

  # === システムメトリクス ===
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: node
      - target_label: service
        replacement: 'system'

  # === コンテナメトリクス ===
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: 'containers'

  # === データベースメトリクス ===
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
      - target_label: service
        replacement: 'database'

  # === Redis メトリクス ===
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    relabel_configs:
      - target_label: service
        replacement: 'cache'

  # === Elasticsearch メトリクス ===
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    scrape_interval: 30s
    metrics_path: /_prometheus/metrics
    relabel_configs:
      - target_label: service
        replacement: 'elasticsearch'

  # === Jaeger メトリクス ===
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger-all-in-one:14269']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: 'jaeger'

  # === Grafana メトリクス ===
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana-apm:3000']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - target_label: service
        replacement: 'grafana'

  # === Prometheus 自体のメトリクス ===
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # === Kubernetes メトリクス (Kubernetes環境の場合) ===
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
            - day-trade
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
      - target_label: service
        replacement: 'kubernetes-api'

  # === HFT 特化メトリクス収集 ===
  - job_name: 'hft-metrics'
    static_configs:
      - targets: ['app:8001']  # HFT専用メトリクスエンドポイント
    scrape_interval: 1s       # 1秒間隔の超高頻度収集
    scrape_timeout: 500ms
    metrics_path: /hft-metrics
    honor_labels: true
    relabel_configs:
      - target_label: service
        replacement: 'hft-trading'
      - target_label: priority
        replacement: 'critical'

  # === カスタムメトリクス収集 ===
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['app:8002']
    scrape_interval: 10s
    metrics_path: /business-metrics
    relabel_configs:
      - target_label: service
        replacement: 'business'

# === リモートストレージ設定 (スケーラブリティ用) ===
# remote_write:
#   - url: "https://prometheus-remote-storage.example.com/api/v1/write"
#     queue_config:
#       max_samples_per_send: 10000
#       max_shards: 200
#       capacity: 500000

# === ストレージ設定 ===
storage:
  tsdb:
    # 30日間のデータ保持
    retention.time: 30d
    # 最大ストレージサイズ
    retention.size: 50GB
    # 圧縮レベル
    wal-compression: true

#==============================================================================
# Prometheus 特化機能:
#
# 🚀 HFT対応高頻度収集:
#   - 1秒間隔での重要メトリクス収集
#   - 500ms タイムアウトでの低レイテンシ
#   - 優先度ベースのメトリクス管理
#
# 📊 包括的メトリクス範囲:
#   - アプリケーションメトリクス
#   - システムメトリクス
#   - インフラストラクチャメトリクス
#   - ビジネスメトリクス
#
# 🔍 智的ラベリング:
#   - サービス別メトリクス分類
#   - 環境・クラスター情報付与
#   - 動的ターゲット検出
#
# ⚡ 高性能設定:
#   - WAL圧縮有効
#   - 最適化されたスクレイピング間隔
#   - 効率的なストレージ管理
#
# 🚨 統合アラート:
#   - AlertManager連携
#   - カスタムルール適用
#   - 階層化アラート管理
#==============================================================================