version: '3.8'

services:
  # Prometheus - メトリクス収集・保存
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: day_trade_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring

  # Grafana - 可視化ダッシュボード
  grafana:
    image: grafana/grafana:10.0.3
    container_name: day_trade_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SMTP_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboard_configs:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - monitoring

  # AlertManager - アラート管理
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: day_trade_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    depends_on:
      - prometheus
    networks:
      - monitoring

  # Node Exporter - システムメトリクス
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: day_trade_node_exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host/root:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # Redis Exporter - Redisメトリクス
  redis-exporter:
    image: oliver006/redis_exporter:v1.52.0
    container_name: day_trade_redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://localhost:6379
    networks:
      - monitoring

  # Day Trade メトリクスエクスポーター
  day-trade-exporter:
    build:
      context: .
      dockerfile: monitoring/Dockerfile.exporter
    container_name: day_trade_metrics_exporter
    ports:
      - "8000:8000"
    environment:
      - METRICS_PORT=8000
      - REDIS_URL=redis://localhost:6379
      - DATABASE_URL=sqlite:///data/trading.db
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs:ro
    depends_on:
      - prometheus
    networks:
      - monitoring

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  monitoring:
    driver: bridge
    name: day_trade_monitoring
