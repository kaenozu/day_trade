version: '3.8'

services:
  daytrade-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "443:443"
    environment:
      - ENVIRONMENT=production
      - API_HOST=0.0.0.0
      - API_PORT=443
      - DB_HOST=prod-db-cluster.internal
      - DB_PORT=5432
      - CACHE_HOST=redis-cluster.internal
      - CACHE_PORT=6379
    env_file:
      - .env.production
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      - database
      - cache

  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=daytrade_prod
      - POSTGRES_USER=prod_user
      - POSTGRES_PASSWORD=${DB_PASSWORD_PRODUCTION}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    ports:
      - "5432:5432"

  cache:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD_PRODUCTION}
    ports:
      - "6379:6379"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - daytrade-app
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  postgres_data:
  grafana_data:
